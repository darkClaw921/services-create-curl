#!/bin/bash

# –ü–∞–ø–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
SERVICES_LIST_DIR="/var/lib/service-creator"
SERVICES_LIST_FILE="${SERVICES_LIST_DIR}/created_services.list"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
NOTIFICATIONS_DIR="${SERVICES_LIST_DIR}/notifications"
NOTIFICATIONS_CONFIG="${NOTIFICATIONS_DIR}/config"
NOTIFICATIONS_ENABLED="false"
TELEGRAM_TOKEN=""
TELEGRAM_CHAT_ID=""

# –¶–≤–µ—Ç–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color
BOLD='\033[1m'

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ —Ñ–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
init_services_list() {
  if [ ! -d "$SERVICES_LIST_DIR" ]; then
    mkdir -p "$SERVICES_LIST_DIR"
  fi
  
  if [ ! -f "$SERVICES_LIST_FILE" ]; then
    touch "$SERVICES_LIST_FILE"
  fi
  
  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  if [ ! -d "$NOTIFICATIONS_DIR" ]; then
    mkdir -p "$NOTIFICATIONS_DIR"
  fi
  
  # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if [ ! -f "$NOTIFICATIONS_CONFIG" ]; then
    echo "NOTIFICATIONS_ENABLED=false" > "$NOTIFICATIONS_CONFIG"
    echo "TELEGRAM_TOKEN=6768830134:AAFK2pxRWUQXhAKITi5QvJAhSLc0azOXqeU" >> "$NOTIFICATIONS_CONFIG"
    echo "TELEGRAM_CHAT_ID=" >> "$NOTIFICATIONS_CONFIG"
  else
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    source "$NOTIFICATIONS_CONFIG"
  fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ Telegram
send_notification() {
  local service_name="$1"
  local status="$2"
  
  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
  local emoji=""
  if [[ "$status" == *"–∑–∞–ø—É—â–µ–Ω"* ]]; then
    emoji="‚úÖ"
  elif [[ "$status" == *"–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"* ]]; then
    emoji="üõë"
  elif [[ "$status" == *"–ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"* ]]; then
    emoji="üîÑ"
  elif [[ "$status" == *"–æ—à–∏–±–∫–∞"* ]]; then
    emoji="‚ùå"
  else
    emoji="‚ÑπÔ∏è"
  fi
  
  # –ü–æ–ª—É—á–∞–µ–º IP —Å–µ—Ä–≤–µ—Ä–∞
  local ip_address=$(hostname -I | awk '{print $1}')
  
  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
  local current_time=$(date "+%d-%m-%Y %H:%M:%S")
  
  # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  local message="${emoji} <b>–°–µ—Ä–≤–∏—Å:</b> ${service_name}
<b>–°—Ç–∞—Ç—É—Å:</b> ${status}
<b>–°–µ—Ä–≤–µ—Ä:</b> ${ip_address}
<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> $(whoami)
<b>–í—Ä–µ–º—è:</b> ${current_time}"
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω—ã –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  if [ "$NOTIFICATIONS_ENABLED" != "true" ]; then
    return 0
  fi
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ chat_id
  if [ -z "$TELEGRAM_CHAT_ID" ]; then
    return 1
  fi
  
  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram API
  curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage" \
    -d chat_id="${TELEGRAM_CHAT_ID}" \
    -d text="${message}" \
    -d parse_mode="HTML" > /dev/null
  
  return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ sudo –ø—Ä–∞–≤
check_sudo() {
  if [ "$(id -u)" -ne 0 ]; then
    echo -e "${RED}${BOLD}–¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ sudo. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å sudo.${NC}"
    exit 1
  fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –∫–æ–º–∞–Ω–¥—ã
check_command() {
  local cmd="$1"
  if ! command -v "$cmd" &> /dev/null; then
    echo -e "${RED}–ö–æ–º–∞–Ω–¥–∞ $cmd –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ.${NC}"
    return 1
  fi
  return 0
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ —ç–∫—Ä–∞–Ω–∞
clear_screen() {
  clear
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ –∑–∞–ø—É—Å–∫–∞
select_runtime() {
  clear_screen
  echo -e "${BOLD}${CYAN}==============================================${NC}"
  echo -e "${BOLD}${CYAN}        –í–´–ë–û–† –†–ï–ñ–ò–ú–ê –ó–ê–ü–£–°–ö–ê –°–ö–†–ò–ü–¢–ê        ${NC}"
  echo -e "${BOLD}${CYAN}==============================================${NC}"
  echo ""
  echo -e "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–ø—É—Å–∫–∞:${NC}"
  echo -e "${CYAN}1.${NC} –ß–∏—Å—Ç—ã–π Python ${BOLD}(python3)${NC}"
  echo -e "${CYAN}2.${NC} UV –º–µ–Ω–µ–¥–∂–µ—Ä ${BOLD}(uv run)${NC}"
  echo -e "${CYAN}3.${NC} Poetry ${BOLD}(poetry run python)${NC}"
  echo -e "${CYAN}4.${NC} PHP —Å–µ—Ä–≤–µ—Ä ${BOLD}(php -S host:port)${NC}"
  echo -e "${CYAN}5.${NC} Shell —Å–∫—Ä–∏–ø—Ç ${BOLD}(bash/sh)${NC}"
  echo ""
  echo -e "${YELLOW}---------------------------------------------${NC}"
  echo -n -e "${GREEN}–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-5): ${NC}"
  read runtime_choice
  
  if ! [[ "$runtime_choice" =~ ^[1-5]$ ]]; then
    echo -e "${RED}–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
    sleep 2
    return 1
  fi
  
  if [ "$runtime_choice" -eq 1 ]; then
    runtime_type="python"
    echo -e "${GREEN}–í—ã–±—Ä–∞–Ω –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Python${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Python
    if ! check_command "python3"; then
      echo -e "${RED}Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python3 –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ —Ä–µ–∂–∏–º–∞.${NC}"
      sleep 2
      return 1
    fi
    
  elif [ "$runtime_choice" -eq 2 ]; then
    runtime_type="uv"
    echo -e "${GREEN}–í—ã–±—Ä–∞–Ω –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ UV –º–µ–Ω–µ–¥–∂–µ—Ä${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ UV
    if ! check_command "uv"; then
      echo -e "${RED}UV –º–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ UV –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ —Ä–µ–∂–∏–º–∞.${NC}"
      sleep 2
      return 1
    fi
  elif [ "$runtime_choice" -eq 4 ]; then
    runtime_type="php"
    echo -e "${GREEN}–í—ã–±—Ä–∞–Ω –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ PHP —Å–µ—Ä–≤–µ—Ä${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ PHP
    if ! check_command "php"; then
      echo -e "${RED}PHP –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PHP –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ —Ä–µ–∂–∏–º–∞.${NC}"
      sleep 2
      return 1
    fi
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ—Ä—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ PHP
    echo -n -e "${GREEN}–í–≤–µ–¥–∏—Ç–µ —Ö–æ—Å—Ç –∏ –ø–æ—Ä—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ PHP (–Ω–∞–ø—Ä–∏–º–µ—Ä, localhost:8000): ${NC}"
    read php_host_port
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞
    if ! [[ "$php_host_port" =~ ^[^:]+:[0-9]+$ ]]; then
      echo -e "${RED}–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç! –¢—Ä–µ–±—É–µ—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç —Ö–æ—Å—Ç:–ø–æ—Ä—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, localhost:8000)${NC}"
      sleep 2
      return 1
    fi
  elif [ "$runtime_choice" -eq 5 ]; then
    runtime_type="shell"
    echo -e "${GREEN}–í—ã–±—Ä–∞–Ω –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Shell –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ bash
    if ! check_command "bash"; then
      echo -e "${RED}Bash –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ bash –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ —Ä–µ–∂–∏–º–∞.${NC}"
      sleep 2
      return 1
    fi
  else
    runtime_type="poetry"
    echo -e "${GREEN}–í—ã–±—Ä–∞–Ω –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Poetry${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Poetry
    if ! check_command "poetry"; then
      echo -e "${RED}Poetry –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Poetry –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ —Ä–µ–∂–∏–º–∞.${NC}"
      sleep 2
      return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ pyproject.toml
    if [ ! -f "pyproject.toml" ]; then
      echo -e "${YELLOW}–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: —Ñ–∞–π–ª pyproject.toml –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.${NC}"
      echo -e "${YELLOW}Poetry –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –±–µ–∑ —Ñ–∞–π–ª–∞ pyproject.toml.${NC}"
      echo -n -e "${GREEN}–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —ç—Ç–æ? (y/n): ${NC}"
      read continue_anyway
      if [[ "$continue_anyway" != "y" && "$continue_anyway" != "Y" ]]; then
        return 1
      fi
    fi
  fi
  
  sleep 1
  return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ –∏–∑ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
select_file() {
  clear_screen
  echo -e "${BOLD}${CYAN}==============================================${NC}"
  echo -e "${BOLD}${CYAN}              –í–´–ë–û–† –§–ê–ô–õ–ê                    ${NC}"
  echo -e "${BOLD}${CYAN}==============================================${NC}"
  echo ""
  echo -e "${YELLOW}–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:${NC}"
  echo ""
  
  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
  files=($(ls -p | grep -v /))
  
  if [ ${#files[@]} -eq 0 ]; then
    echo -e "${RED}–í —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤.${NC}"
    sleep 2
    return 1
  fi
  
  # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ —Å –Ω–æ–º–µ—Ä–∞–º–∏
  for i in "${!files[@]}"; do
    echo -e "${CYAN}$((i+1)).${NC} ${files[$i]}"
  done
  
  echo ""
  echo -e "${YELLOW}---------------------------------------------${NC}"
  echo -n -e "${GREEN}–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞: ${NC}"
  read choice
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞
  if ! [[ "$choice" =~ ^[0-9]+$ ]] || [ "$choice" -lt 1 ] || [ "$choice" -gt ${#files[@]} ]; then
    echo -e "${RED}–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
    sleep 2
    return 1
  fi
  
  selected_file="${files[$((choice-1))]}"
  echo -e "${GREEN}–í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: ${BOLD}$selected_file${NC}"
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π, –µ—Å–ª–∏ –Ω–µ—Ç - –¥–µ–ª–∞–µ–º –µ–≥–æ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
  if [ ! -x "$selected_file" ]; then
    echo -e "${YELLOW}–§–∞–π–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º. –î–µ–ª–∞–µ–º –µ–≥–æ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º...${NC}"
    chmod +x "$selected_file"
  fi
  
  sleep 1
  return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ systemd —Å–µ—Ä–≤–∏—Å–∞
create_service() {
  clear_screen
  local file="$1"
  local runtime="$2"
  local abs_path="$(pwd)/$file"
  local service_name="${file%.*}"
  local exec_command=""
  
  echo -e "${BOLD}${CYAN}==============================================${NC}"
  echo -e "${BOLD}${CYAN}           –°–û–ó–î–ê–ù–ò–ï –°–ï–†–í–ò–°–ê                  ${NC}"
  echo -e "${BOLD}${CYAN}==============================================${NC}"
  echo ""
  
  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∑–∞–ø—É—Å–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
  if [ "$runtime" == "python" ]; then
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ python3
    python_path=$(which python3)
    exec_command="$python_path $file"
  elif [ "$runtime" == "uv" ]; then
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ uv
    uv_path=$(which uv)
    exec_command="$uv_path run $file"
  elif [ "$runtime" == "php" ]; then
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ php
    php_path=$(which php)
    exec_command="$php_path -S $php_host_port $file"
  elif [ "$runtime" == "shell" ]; then
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ bash
    bash_path=$(which bash)
    exec_command="$bash_path $file"
  elif [ "$runtime" == "poetry" ]; then
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ poetry
    poetry_path=$(which poetry)
    exec_command="$poetry_path run python $file"
  fi
  
  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
  echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞:${NC}"
  echo ""
  echo -n -e "${GREEN}–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞: ${NC}"
  read description
  USER=$(whoami)
  
  # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  local notification_script="${NOTIFICATIONS_DIR}/${service_name}_notify.sh"
  cat > "$notification_script" << EOF
#!/bin/bash

# –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
source ${NOTIFICATIONS_CONFIG}

# –ü–æ–ª—É—á–∞–µ–º IP-–∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞
IP_ADDRESS=\$(hostname -I | awk '{print \$1}')

# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
CURRENT_TIME=\$(date "+%d-%m-%Y %H:%M:%S")

# –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
CURRENT_USER=\$(whoami)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
EMOJI=""
if [[ "\$1" == *"–∑–∞–ø—É—â–µ–Ω"* ]]; then
  EMOJI="‚úÖ"
elif [[ "\$1" == *"–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"* ]]; then
  EMOJI="üõë"
elif [[ "\$1" == *"–ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"* ]]; then
  EMOJI="üîÑ"
elif [[ "\$1" == *"–æ—à–∏–±–∫–∞"* ]]; then
  EMOJI="‚ùå"
else
  EMOJI="‚ÑπÔ∏è"
fi

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
if [ "\$NOTIFICATIONS_ENABLED" == "true" ] && [ ! -z "\$TELEGRAM_CHAT_ID" ]; then
  SERVICE_NAME="${service_name}"
  STATUS="\$1"
  
  # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –ª–æ–≥–∞–º–∏
  LOG_FILE="/tmp/\${SERVICE_NAME}_log.txt"
  journalctl -u "${service_name}.service" -n 50 > "\$LOG_FILE"
  
  # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏, IP, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ –≤—Ä–µ–º–µ–Ω–µ–º
  MESSAGE="\$EMOJI <b>–°–µ—Ä–≤–∏—Å:</b> \$SERVICE_NAME
<b>–°—Ç–∞—Ç—É—Å:</b> \$STATUS
<b>–°–µ—Ä–≤–µ—Ä:</b> \$IP_ADDRESS
<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> \$CURRENT_USER
<b>–í—Ä–µ–º—è:</b> \$CURRENT_TIME"

  # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  curl -s -X POST "https://api.telegram.org/bot\${TELEGRAM_TOKEN}/sendMessage" \\
    -d chat_id="\${TELEGRAM_CHAT_ID}" \\
    -d text="\${MESSAGE}" \\
    -d parse_mode="HTML" > /dev/null
  
  # –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª —Å –ª–æ–≥–∞–º–∏
  curl -s -X POST "https://api.telegram.org/bot\${TELEGRAM_TOKEN}/sendDocument" \\
    -F chat_id="\${TELEGRAM_CHAT_ID}" \\
    -F document=@"\$LOG_FILE" \\
    -F caption="–õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞ \$SERVICE_NAME (\$CURRENT_TIME)" > /dev/null
  
  # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
  rm -f "\$LOG_FILE"
fi

exit 0
EOF

  # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
  chmod +x "$notification_script"
  
  # –°–æ–∑–¥–∞–µ–º service —Ñ–∞–π–ª
  cat > "/etc/systemd/system/${service_name}.service" << EOF
[Unit]
Description=${description:-"Service for $file"}
After=network.target

[Service]
Type=simple
User=${USER}
WorkingDirectory=$(pwd)
ExecStart=${exec_command}
ExecStartPost=${notification_script} "–∑–∞–ø—É—â–µ–Ω"
ExecStop=${notification_script} "–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
ExecReload=${notification_script} "–ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
Environment=PATH=$PATH

Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

  echo ""
  echo -e "${GREEN}–°–µ—Ä–≤–∏—Å–Ω—ã–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: ${BOLD}/etc/systemd/system/${service_name}.service${NC}"
  echo -e "${BLUE}–ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞:${NC} ${exec_command}"
  
  # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–∏—Å–µ
  echo "${service_name}.service:$(pwd):$(date '+%Y-%m-%d %H:%M:%S')" >> "$SERVICES_LIST_FILE"
  
  # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é systemd
  echo -e "${YELLOW}–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ systemd...${NC}"
  systemctl daemon-reload
  
  # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
  echo -e "${YELLOW}–ê–∫—Ç–∏–≤–∞—Ü–∏—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞...${NC}"
  systemctl enable "${service_name}.service"
  
  # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å —Å–µ–π—á–∞—Å
  echo ""
  echo -n -e "${GREEN}–•–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å —Å–µ–π—á–∞—Å? (y/n): ${NC}"
  read start_now
  
  if [[ "$start_now" == "y" || "$start_now" == "Y" ]]; then
    echo -e "${YELLOW}–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞...${NC}"
    systemctl start "${service_name}.service"
    sleep 1
    echo ""
    echo -e "${YELLOW}–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞:${NC}"
    systemctl status "${service_name}.service"
  fi
  
  echo ""
  echo -e "${GREEN}${BOLD}–°–µ—Ä–≤–∏—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏.${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∂—É—Ä–Ω–∞–ª–∞ —Å–µ—Ä–≤–∏—Å–∞
view_service_logs() {
  local service_name="$1"
  
  clear_screen
  echo -e "${BOLD}${CYAN}==============================================${NC}"
  echo -e "${BOLD}${CYAN}       –ñ–£–†–ù–ê–õ–´ –°–ï–†–í–ò–°–ê $service_name         ${NC}"
  echo -e "${BOLD}${CYAN}==============================================${NC}"
  echo ""
  
  echo -e "${YELLOW}–ü–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫ –∂—É—Ä–Ω–∞–ª–∞:${NC}"
  echo -e "${YELLOW}---------------------------------------------${NC}"
  echo ""
  
  journalctl -u "$service_name" -n 50 --no-pager
  
  echo ""
  echo -e "${YELLOW}---------------------------------------------${NC}"
  echo -e "${YELLOW}–û–ø—Ü–∏–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∂—É—Ä–Ω–∞–ª–∞:${NC}"
  echo -e "${CYAN}1.${NC} –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–æ–ª—å—à–µ —Å—Ç—Ä–æ–∫"
  echo -e "${CYAN}2.${NC} –ù–∞–±–ª—é–¥–∞—Ç—å –∑–∞ –∂—É—Ä–Ω–∞–ª–æ–º –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
  echo -e "${CYAN}3.${NC} –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
  echo ""
  echo -n -e "${GREEN}–í–∞—à –≤—ã–±–æ—Ä (1-3): ${NC}"
  read log_option
  
  case $log_option in
    1)
      clear_screen
      echo -e "${BOLD}${CYAN}==============================================${NC}"
      echo -e "${BOLD}${CYAN}       –ü–û–õ–ù–´–ô –ñ–£–†–ù–ê–õ –°–ï–†–í–ò–°–ê $service_name   ${NC}"
      echo -e "${BOLD}${CYAN}==============================================${NC}"
      echo ""
      echo -e "${YELLOW}–ü–æ–ª–Ω—ã–π –∂—É—Ä–Ω–∞–ª —Å–µ—Ä–≤–∏—Å–∞ (–Ω–∞–∂–º–∏—Ç–µ q –¥–ª—è –≤—ã—Ö–æ–¥–∞):${NC}"
      echo ""
      
      # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä
      journalctl -u "$service_name" --no-pager | less
      ;;
    2)
      clear_screen
      echo -e "${BOLD}${CYAN}==============================================${NC}"
      echo -e "${BOLD}${CYAN}     –ú–û–ù–ò–¢–û–†–ò–ù–ì –ñ–£–†–ù–ê–õ–ê $service_name        ${NC}"
      echo -e "${BOLD}${CYAN}==============================================${NC}"
      echo ""
      echo -e "${YELLOW}–ñ—É—Ä–Ω–∞–ª –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ (–Ω–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):${NC}"
      echo ""
      
      # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
      journalctl -u "$service_name" -f
      ;;
    *)
      # –í–æ–∑–≤—Ä–∞—Ç –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é
      return 0
      ;;
  esac
  
  return 0
}

# –§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ —Å–µ—Ä–≤–∏—Å–∞
edit_service_file() {
  local service_name="$1"
  
  clear_screen
  echo -e "${BOLD}${CYAN}==============================================${NC}"
  echo -e "${BOLD}${CYAN}     –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –°–ï–†–í–ò–°–ê $service_name     ${NC}"
  echo -e "${BOLD}${CYAN}==============================================${NC}"
  echo ""
  
  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤
  local editor=""
  # if command -v nano &> /dev/null; then
    # editor="nano"
  if command -v vim &> /dev/null; then
    editor="vim"
  elif command -v vi &> /dev/null; then
    editor="vi"
  else
    echo -e "${RED}–ù–µ –Ω–∞–π–¥–µ–Ω —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä (vim –∏–ª–∏ vi).${NC}"
    sleep 2
    return 1
  fi
  
  echo -e "${YELLOW}–û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å–µ—Ä–≤–∏—Å–∞ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ $editor...${NC}"
  sleep 1
  
  $editor "/etc/systemd/system/$service_name"
  
  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—ã—Ö–æ–¥–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
  if [ $? -eq 0 ]; then
    echo -e "${GREEN}–§–∞–π–ª —Å–µ—Ä–≤–∏—Å–∞ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω.${NC}"
    
    echo -e "${YELLOW}–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ systemd...${NC}"
    systemctl daemon-reload
    
    echo -e "${GREEN}–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π.${NC}"
  else
    echo -e "${RED}–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ.${NC}"
  fi
  
  sleep 2
  return 0
}

# –§—É–Ω–∫—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —Å–µ—Ä–≤–∏—Å–æ–º
service_control() {
  local service_name="$1"
  local service_path="$2"
  
  while true; do
    clear_screen
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞
    local status=$(systemctl is-active "$service_name")
    local enabled=$(systemctl is-enabled "$service_name" 2>/dev/null)
    
    local status_text=""
    if [ "$status" == "active" ]; then
      status_text="${GREEN}–ê–∫—Ç–∏–≤–µ–Ω${NC}"
    else
      status_text="${RED}–ù–µ–∞–∫—Ç–∏–≤–µ–Ω${NC}"
    fi
    
    local enabled_text=""
    if [ "$enabled" == "enabled" ]; then
      enabled_text="${GREEN}–î–∞${NC}"
    else
      enabled_text="${RED}–ù–µ—Ç${NC}"
    fi
    
    echo -e "${BOLD}${CYAN}==============================================${NC}"
    echo -e "${BOLD}${CYAN}     –£–ü–†–ê–í–õ–ï–ù–ò–ï –°–ï–†–í–ò–°–û–ú: $service_name      ${NC}"
    echo -e "${BOLD}${CYAN}==============================================${NC}"
    echo ""
    echo -e "${YELLOW}–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ:${NC}"
    echo -e "${YELLOW}---------------------------------------------${NC}"
    echo -e "${BOLD}–ò–º—è:${NC} $service_name"
    echo -e "${BOLD}–°—Ç–∞—Ç—É—Å:${NC} $status_text"
    echo -e "${BOLD}–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫:${NC} $enabled_text"
    echo -e "${BOLD}–ü—É—Ç—å:${NC} $service_path"
    echo -e "${YELLOW}---------------------------------------------${NC}"
    echo ""
    
    echo -e "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
    echo -e "${CYAN}1.${NC} –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å"
    echo -e "${CYAN}2.${NC} –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å"
    echo -e "${CYAN}3.${NC} –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å"
    echo -e "${CYAN}4.${NC} –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∂—É—Ä–Ω–∞–ª —Å–µ—Ä–≤–∏—Å–∞"
    echo -e "${CYAN}5.${NC} –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª —Å–µ—Ä–≤–∏—Å–∞"
    echo -e "${CYAN}6.${NC} –£–¥–∞–ª–∏—Ç—å —Å–µ—Ä–≤–∏—Å"
    echo -e "${CYAN}7.${NC} –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo ""
    echo -e "${YELLOW}---------------------------------------------${NC}"
    echo -n -e "${GREEN}–í–∞—à –≤—ã–±–æ—Ä (1-7): ${NC}"
    read control_option
    
    case $control_option in
      1) # –ó–∞–ø—É—Å—Ç–∏—Ç—å
        echo -e "${YELLOW}–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞...${NC}"
        systemctl start "$service_name"
        sleep 1
        systemctl status "$service_name" --no-pager
        echo ""
        echo -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...${NC}"
        read
        ;;
      2) # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
        echo -e "${YELLOW}–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞...${NC}"
        systemctl stop "$service_name"
        sleep 1
        systemctl status "$service_name" --no-pager
        echo ""
        echo -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...${NC}"
        read
        ;;
      3) # –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å
        echo -e "${YELLOW}–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞...${NC}"
        systemctl restart "$service_name"
        sleep 1
        systemctl status "$service_name" --no-pager
        echo ""
        echo -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...${NC}"
        read
        ;;
      4) # –ü—Ä–æ—Å–º–æ—Ç—Ä –∂—É—Ä–Ω–∞–ª–∞
        view_service_logs "$service_name"
        ;;
      5) # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
        edit_service_file "$service_name"
        ;;
      6) # –£–¥–∞–ª–∏—Ç—å
        echo -e "${RED}${BOLD}–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–µ—Ä–≤–∏—Å $service_name? (y/n): ${NC}"
        read confirm_delete
        
        if [[ "$confirm_delete" == "y" || "$confirm_delete" == "Y" ]]; then
          echo -e "${YELLOW}–£–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ $service_name...${NC}"
          
          # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å –µ—Å–ª–∏ –æ–Ω –∑–∞–ø—É—â–µ–Ω
          echo -e "${YELLOW}–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞...${NC}"
          systemctl stop "$service_name" 2>/dev/null
          
          # –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
          echo -e "${YELLOW}–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞...${NC}"
          systemctl disable "$service_name" 2>/dev/null
          
          # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª —Å–µ—Ä–≤–∏—Å–∞
          echo -e "${YELLOW}–£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å–µ—Ä–≤–∏—Å–∞...${NC}"
          rm -f "/etc/systemd/system/$service_name"
          
          # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é systemd
          echo -e "${YELLOW}–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ systemd...${NC}"
          systemctl daemon-reload
          
          # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ —Å–ø–∏—Å–∫–∞
          local temp_file=$(mktemp)
          grep -v "^$service_name:" "$SERVICES_LIST_FILE" > "$temp_file"
          mv "$temp_file" "$SERVICES_LIST_FILE"
          
          echo -e "${GREEN}${BOLD}–°–µ—Ä–≤–∏—Å $service_name —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.${NC}"
          sleep 2
          return 0
        else
          echo -e "${YELLOW}–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.${NC}"
          sleep 1
        fi
        ;;
      7) # –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
        return 0
        ;;
      *)
        echo -e "${RED}–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
        sleep 1
        ;;
    esac
  done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–Ω—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏
manage_services() {
  while true; do
    clear_screen
    echo -e "${BOLD}${CYAN}==============================================${NC}"
    echo -e "${BOLD}${CYAN}       –£–ü–†–ê–í–õ–ï–ù–ò–ï –°–ï–†–í–ò–°–ê–ú–ò                  ${NC}"
    echo -e "${BOLD}${CYAN}==============================================${NC}"
    echo ""
    
    if [ ! -s "$SERVICES_LIST_FILE" ]; then
      echo -e "${RED}–°–ø–∏—Å–æ–∫ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—É—Å—Ç.${NC}"
      sleep 2
      return 1
    fi
    
    echo -e "${YELLOW}–°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤, —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —ç—Ç–∏–º —Å–∫—Ä–∏–ø—Ç–æ–º:${NC}"
    echo -e "${YELLOW}---------------------------------------------${NC}"
    
    mapfile -t services < "$SERVICES_LIST_FILE"
    
    for i in "${!services[@]}"; do
      service_info=(${services[$i]//:/ })
      service_name="${service_info[0]}"
      service_path="${service_info[1]}"
      service_date="${service_info[2]} ${service_info[3]}"
      
      status=$(systemctl is-active "$service_name" 2>/dev/null)
      if [ "$status" == "active" ]; then
        status_text="${GREEN}–∞–∫—Ç–∏–≤–µ–Ω${NC}"
      else
        status_text="${RED}–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω${NC}"
      fi
      
      echo -e "${CYAN}$((i+1)).${NC} ${BOLD}$service_name${NC} (${status_text}) - —Å–æ–∑–¥–∞–Ω: ${BLUE}$service_date${NC}"
      echo -e "   ${YELLOW}–ü—É—Ç—å:${NC} ${service_path}"
      echo -e "${YELLOW}---------------------------------------------${NC}"
    done
    
    echo ""
    echo -e "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
    echo -e "${CYAN}1.${NC} –í—ã–±—Ä–∞—Ç—å —Å–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
    echo -e "${CYAN}2.${NC} –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    echo ""
    echo -e "${YELLOW}---------------------------------------------${NC}"
    echo -n -e "${GREEN}–í–∞—à –≤—ã–±–æ—Ä (1-2): ${NC}"
    read action_choice
    
    if [ "$action_choice" -eq 1 ]; then
      echo ""
      echo -n -e "${GREEN}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ${NC}"
      read service_number
      
      if ! [[ "$service_number" =~ ^[0-9]+$ ]] || [ "$service_number" -lt 1 ] || [ "$service_number" -gt ${#services[@]} ]; then
        echo -e "${RED}–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
        sleep 2
        continue
      fi
      
      selected_service=(${services[$((service_number-1))]//:/ })
      service_name="${selected_service[0]}"
      service_path="${selected_service[1]}"
      
      service_control "$service_name" "$service_path"
    elif [ "$action_choice" -eq 2 ]; then
      return 0
    else
      echo -e "${RED}–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
      sleep 1
    fi
  done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–æ–≤ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Ö nginx
check_nginx_ports() {
  clear_screen
  echo -e "${BOLD}${CYAN}==============================================${NC}"
  echo -e "${BOLD}${CYAN}       –ü–†–û–í–ï–†–ö–ê –ü–û–†–¢–û–í NGINX                  ${NC}"
  echo -e "${BOLD}${CYAN}==============================================${NC}"
  echo ""
  
  local nginx_sites_dir="/etc/nginx/sites-available"
  
  if [ ! -d "$nginx_sites_dir" ]; then
    echo -e "${RED}–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $nginx_sites_dir –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.${NC}"
    echo -e "${YELLOW}–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ nginx —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
    sleep 3
    return 1
  fi
  
  echo -e "${YELLOW}–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π nginx...${NC}"
  echo -e "${YELLOW}---------------------------------------------${NC}"
  echo ""
  
  local found_configs=false
  
  # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ sites-available
  for config_file in "$nginx_sites_dir"/*; do
    if [ -f "$config_file" ]; then
      found_configs=true
      local filename=$(basename "$config_file")
      
      # –ò–∑–≤–ª–µ–∫–∞–µ–º server_name
      local server_names=$(grep -E "^\s*server_name" "$config_file" | sed 's/^\s*server_name\s*//' | sed 's/;//' | tr '\n' ' ')
      
      # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ—Ä—Ç—ã –∏–∑ listen –¥–∏—Ä–µ–∫—Ç–∏–≤
      local listen_ports=$(grep -E "^\s*listen" "$config_file" | grep -oE "[0-9]+" | sort -u | tr '\n' ' ')
      
      # –ò–∑–≤–ª–µ–∫–∞–µ–º proxy_pass –µ—Å–ª–∏ –µ—Å—Ç—å
      local proxy_passes=$(grep -E "^\s*proxy_pass" "$config_file" | sed 's/^\s*proxy_pass\s*//' | sed 's/;//' | tr '\n' ' ')
      
      echo -e "${CYAN}${BOLD}–§–∞–π–ª:${NC} $filename"
      
      if [ ! -z "$server_names" ]; then
        echo -e "${YELLOW}  –î–æ–º–µ–Ω—ã:${NC} $server_names"
      fi
      
      if [ ! -z "$listen_ports" ]; then
        echo -e "${GREEN}  –ü–æ—Ä—Ç—ã:${NC} $listen_ports"
      else
        echo -e "${RED}  –ü–æ—Ä—Ç—ã: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${NC}"
      fi
      
      if [ ! -z "$proxy_passes" ]; then
        echo -e "${BLUE}  –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ:${NC} $proxy_passes"
      fi
      
      # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ª–∏ –∫–æ–Ω—Ñ–∏–≥
      local enabled_link="/etc/nginx/sites-enabled/$(basename "$config_file")"
      if [ -L "$enabled_link" ]; then
        echo -e "${GREEN}  –°—Ç–∞—Ç—É—Å: –ê–ö–¢–ò–í–ò–†–û–í–ê–ù${NC}"
      else
        echo -e "${RED}  –°—Ç–∞—Ç—É—Å: –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω${NC}"
      fi
      
      echo -e "${YELLOW}---------------------------------------------${NC}"
    fi
  done
  
  if [ "$found_configs" = false ]; then
    echo -e "${YELLOW}–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ $nginx_sites_dir${NC}"
  fi
  
  echo ""
  echo -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...${NC}"
  read
  return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx
create_nginx_config() {
  clear_screen
  echo -e "${BOLD}${CYAN}==============================================${NC}"
  echo -e "${BOLD}${CYAN}      –°–û–ó–î–ê–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò NGINX             ${NC}"
  echo -e "${BOLD}${CYAN}==============================================${NC}"
  echo ""
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ nginx
  if ! command -v nginx &> /dev/null; then
    echo -e "${RED}Nginx –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ.${NC}"
    echo -e "${YELLOW}–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ nginx –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.${NC}"
    sleep 3
    return 1
  fi
  
  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–æ–º–µ–Ω
  echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx:${NC}"
  echo ""
  echo -n -e "${GREEN}–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, example.com –∏–ª–∏ subdomain.example.com): ${NC}"
  read domain
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–æ–º–µ–Ω–∞
  if [ -z "$domain" ]; then
    echo -e "${RED}–î–æ–º–µ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!${NC}"
    sleep 2
    return 1
  fi
  
  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ—Ä—Ç
  echo -n -e "${GREEN}–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—Ç –¥–ª—è –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 8000): ${NC}"
  read port
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞
  if ! [[ "$port" =~ ^[0-9]+$ ]] || [ "$port" -lt 1 ] || [ "$port" -gt 65535 ]; then
    echo -e "${RED}–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–æ—Ä—Ç! –£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 65535.${NC}"
    sleep 2
    return 1
  fi
  
  # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  local config_filename="${domain}.conf"
  local config_path="/etc/nginx/sites-available/${config_filename}"
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –∫–æ–Ω—Ñ–∏–≥
  if [ -f "$config_path" ]; then
    echo -e "${YELLOW}–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–º–µ–Ω–∞ $domain —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.${NC}"
    echo -n -e "${RED}–ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é? (y/n): ${NC}"
    read overwrite
    
    if [[ "$overwrite" != "y" && "$overwrite" != "Y" ]]; then
      echo -e "${YELLOW}–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ.${NC}"
      sleep 2
      return 1
    fi
  fi
  
  # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª
  echo ""
  echo -e "${YELLOW}–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞...${NC}"
  
  cat > "$config_path" << EOF
server {
    listen 80;
    listen [::]:80;
    server_name ${domain};

    location / {
        proxy_pass http://127.0.0.1:${port};
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF
  
  if [ $? -eq 0 ]; then
    echo -e "${GREEN}–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: ${BOLD}$config_path${NC}"
  else
    echo -e "${RED}–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞!${NC}"
    sleep 2
    return 1
  fi
  
  # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ —Å–∏–º–ª–∏–Ω–∫
  echo -e "${YELLOW}–ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...${NC}"
  
  local enabled_path="/etc/nginx/sites-enabled/${config_filename}"
  
  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Å–∏–º–ª–∏–Ω–∫ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if [ -L "$enabled_path" ]; then
    rm -f "$enabled_path"
  fi
  
  # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–∏–º–ª–∏–Ω–∫
  ln -s "$config_path" "$enabled_path"
  
  if [ $? -eq 0 ]; then
    echo -e "${GREEN}–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞: ${BOLD}$enabled_path${NC}"
  else
    echo -e "${RED}–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏!${NC}"
    sleep 2
    return 1
  fi
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx
  echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx...${NC}"
  nginx -t
  
  if [ $? -ne 0 ]; then
    echo -e "${RED}–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.${NC}"
    sleep 3
    return 1
  fi
  
  # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º nginx
  echo -e "${YELLOW}–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ nginx...${NC}"
  systemctl reload nginx
  
  if [ $? -eq 0 ]; then
    echo -e "${GREEN}Nginx —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω!${NC}"
  else
    echo -e "${RED}–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ nginx!${NC}"
    sleep 2
    return 1
  fi
  
  echo ""
  echo -e "${GREEN}${BOLD}–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è nginx —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!${NC}"
  echo ""
  
  # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
  echo -n -e "${GREEN}–•–æ—Ç–∏—Ç–µ –≤—ã–ø—É—Å—Ç–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è –¥–æ–º–µ–Ω–∞ $domain? (y/n): ${NC}"
  read issue_ssl
  
  if [[ "$issue_ssl" == "y" || "$issue_ssl" == "Y" ]]; then
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ certbot
    if ! command -v certbot &> /dev/null; then
      echo -e "${RED}Certbot –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ.${NC}"
      echo -e "${YELLOW}–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ certbot –¥–ª—è –≤—ã–ø—É—Å–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤.${NC}"
      echo -e "${YELLOW}–ù–∞–ø—Ä–∏–º–µ—Ä: sudo apt install certbot python3-certbot-nginx${NC}"
      sleep 3
      return 0
    fi
    
    echo ""
    echo -e "${YELLOW}–í—ã–ø—É—Å–∫ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è –¥–æ–º–µ–Ω–∞ $domain...${NC}"
    echo -e "${YELLOW}---------------------------------------------${NC}"
    echo ""
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º certbot
    certbot --nginx -d "$domain"
    
    if [ $? -eq 0 ]; then
      echo ""
      echo -e "${GREEN}${BOLD}SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–ø—É—â–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!${NC}"
    else
      echo ""
      echo -e "${RED}–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø—É—Å–∫–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞.${NC}"
      echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ:${NC}"
      echo -e "${YELLOW}  1. –î–æ–º–µ–Ω $domain —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ IP —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞${NC}"
      echo -e "${YELLOW}  2. –ü–æ—Ä—Ç—ã 80 –∏ 443 –æ—Ç–∫—Ä—ã—Ç—ã –≤ firewall${NC}"
      echo -e "${YELLOW}  3. Nginx —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
    fi
  else
    echo -e "${YELLOW}–í—ã–ø—É—Å–∫ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –ø—Ä–æ–ø—É—â–µ–Ω.${NC}"
    echo -e "${YELLOW}–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–∑–∂–µ –∫–æ–º–∞–Ω–¥–æ–π:${NC}"
    echo -e "${CYAN}sudo certbot --nginx -d $domain${NC}"
  fi
  
  echo ""
  echo -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...${NC}"
  read
  return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
manage_notifications() {
  while true; do
    clear_screen
    echo -e "${BOLD}${CYAN}==============================================${NC}"
    echo -e "${BOLD}${CYAN}          –ú–ï–ù–ï–î–ñ–ï–† –£–í–ï–î–û–ú–õ–ï–ù–ò–ô                ${NC}"
    echo -e "${BOLD}${CYAN}==============================================${NC}"
    echo ""
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    local status_text=""
    if [ "$NOTIFICATIONS_ENABLED" == "true" ]; then
      status_text="${GREEN}–í–∫–ª—é—á–µ–Ω—ã${NC}"
    else
      status_text="${RED}–û—Ç–∫–ª—é—á–µ–Ω—ã${NC}"
    fi
    
    echo -e "${YELLOW}–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:${NC}"
    echo -e "${YELLOW}---------------------------------------------${NC}"
    echo -e "${BOLD}–°—Ç–∞—Ç—É—Å:${NC} $status_text"
    echo -e "${BOLD}Telegram —Ç–æ–∫–µ–Ω:${NC} ${TELEGRAM_TOKEN:0:10}...${TELEGRAM_TOKEN:(-5)}"
    echo -e "${BOLD}Telegram Chat ID:${NC} ${TELEGRAM_CHAT_ID:-'–ù–µ —É–∫–∞–∑–∞–Ω'}"
    echo -e "${YELLOW}---------------------------------------------${NC}"
    echo ""
    echo -e "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
    echo -e "${CYAN}1.${NC} –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
    echo -e "${CYAN}2.${NC} –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Telegram —Ç–æ–∫–µ–Ω"
    echo -e "${CYAN}3.${NC} –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Telegram Chat ID"
    echo -e "${CYAN}4.${NC} –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
    echo -e "${CYAN}5.${NC} –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    echo ""
    echo -e "${YELLOW}---------------------------------------------${NC}"
    echo -n -e "${GREEN}–í–∞—à –≤—ã–±–æ—Ä (1-5): ${NC}"
    read notif_choice
    
    case $notif_choice in
      1) # –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        if [ "$NOTIFICATIONS_ENABLED" == "true" ]; then
          NOTIFICATIONS_ENABLED="false"
          echo -e "${YELLOW}–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã.${NC}"
        else
          NOTIFICATIONS_ENABLED="true"
          echo -e "${GREEN}–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã.${NC}"
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ª–∏ Chat ID
          if [ -z "$TELEGRAM_CHAT_ID" ]; then
            echo -e "${YELLOW}–í–Ω–∏–º–∞–Ω–∏–µ: Telegram Chat ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è.${NC}"
            echo -e "${YELLOW}–ù–∞—Å—Ç—Ä–æ–π—Ç–µ Telegram Chat ID –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.${NC}"
          fi
        fi
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        echo "NOTIFICATIONS_ENABLED=$NOTIFICATIONS_ENABLED" > "$NOTIFICATIONS_CONFIG"
        echo "TELEGRAM_TOKEN=$TELEGRAM_TOKEN" >> "$NOTIFICATIONS_CONFIG"
        echo "TELEGRAM_CHAT_ID=$TELEGRAM_CHAT_ID" >> "$NOTIFICATIONS_CONFIG"
        
        sleep 2
        ;;
        
      2) # –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Telegram —Ç–æ–∫–µ–Ω
        echo ""
        echo -n -e "${GREEN}–í–≤–µ–¥–∏—Ç–µ Telegram —Ç–æ–∫–µ–Ω (—Ç–µ–∫—É—â–∏–π: ${TELEGRAM_TOKEN:0:10}...): ${NC}"
        read new_token
        
        if [ ! -z "$new_token" ]; then
          TELEGRAM_TOKEN="$new_token"
          echo -e "${GREEN}–¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.${NC}"
          
          # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          echo "NOTIFICATIONS_ENABLED=$NOTIFICATIONS_ENABLED" > "$NOTIFICATIONS_CONFIG"
          echo "TELEGRAM_TOKEN=$TELEGRAM_TOKEN" >> "$NOTIFICATIONS_CONFIG"
          echo "TELEGRAM_CHAT_ID=$TELEGRAM_CHAT_ID" >> "$NOTIFICATIONS_CONFIG"
        fi
        
        sleep 2
        ;;
        
      3) # –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Telegram Chat ID
        echo ""
        echo -e "${YELLOW}–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Chat ID:${NC}"
        echo -e "1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ @userinfobot –≤ Telegram"
        echo -e "2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É —Å–æ–æ–±—â–µ–Ω–∏–µ /start"
        echo -e "3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π ID –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –Ω–∏–∂–µ"
        echo ""
        echo -n -e "${GREEN}–í–≤–µ–¥–∏—Ç–µ Telegram Chat ID: ${NC}"
        read new_chat_id
        
        if [ ! -z "$new_chat_id" ]; then
          TELEGRAM_CHAT_ID="$new_chat_id"
          echo -e "${GREEN}Chat ID —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.${NC}"
          
          # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          echo "NOTIFICATIONS_ENABLED=$NOTIFICATIONS_ENABLED" > "$NOTIFICATIONS_CONFIG"
          echo "TELEGRAM_TOKEN=$TELEGRAM_TOKEN" >> "$NOTIFICATIONS_CONFIG"
          echo "TELEGRAM_CHAT_ID=$TELEGRAM_CHAT_ID" >> "$NOTIFICATIONS_CONFIG"
        fi
        
        sleep 2
        ;;
        
      4) # –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        if [ "$NOTIFICATIONS_ENABLED" != "true" ]; then
          echo -e "${YELLOW}–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã. –í–∫–ª—é—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.${NC}"
          sleep 2
          continue
        fi
        
        if [ -z "$TELEGRAM_CHAT_ID" ]; then
          echo -e "${RED}–û—à–∏–±–∫–∞: Telegram Chat ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω.${NC}"
          sleep 2
          continue
        fi
        
        echo -e "${YELLOW}–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...${NC}"
        if send_notification "Test" "–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"; then
          echo -e "${GREEN}–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!${NC}"
        else
          echo -e "${RED}–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.${NC}"
        fi
        
        sleep 2
        ;;
        
      5) # –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        return 0
        ;;
        
      *)
        echo -e "${RED}–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
        sleep 1
        ;;
    esac
  done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
show_main_menu() {
  while true; do
    clear_screen
    echo -e "${BOLD}${CYAN}==============================================${NC}"
    echo -e "${BOLD}${CYAN}            –£–ü–†–ê–í–õ–ï–ù–ò–ï –°–ï–†–í–ò–°–ê–ú–ò              ${NC}"
    echo -e "${BOLD}${CYAN}==============================================${NC}"
    echo ""
    echo -e "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
    echo -e "${CYAN}1.${NC} –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å"
    echo -e "${CYAN}2.${NC} –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏"
    echo -e "${CYAN}3.${NC} –ú–µ–Ω–µ–¥–∂–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
    echo -e "${CYAN}4.${NC} –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Ä—Ç—ã nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π"
    echo -e "${CYAN}5.${NC} –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx"
    echo -e "${CYAN}6.${NC} –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å–∫—Ä–∏–ø—Ç–∞"
    echo ""
    echo -e "${YELLOW}---------------------------------------------${NC}"
    echo -n -e "${GREEN}–í–∞—à –≤—ã–±–æ—Ä (1-6): ${NC}"
    read main_choice
    
    case $main_choice in
      1)
        if select_runtime; then
          if select_file; then
            create_service "$selected_file" "$runtime_type"
          fi
        fi
        ;;
      2)
        manage_services
        ;;
      3)
        manage_notifications
        ;;
      4)
        check_nginx_ports
        ;;
      5)
        create_nginx_config
        ;;
      6)
        clear_screen
        echo -e "${GREEN}${BOLD}–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–ø—Ç–∞. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"
        return 0
        ;;
      *)
        echo -e "${RED}–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
        sleep 1
        ;;
    esac
    
    # –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –≤–æ–∑–≤—Ä–∞—Ç–æ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if [ "$main_choice" != "6" ]; then
      echo ""
      echo -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...${NC}"
      read
    fi
  done
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
  check_sudo
  init_services_list
  show_main_menu
}


# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main